{"version":3,"sources":["components/About/index.js","components/Contact/index.js","utils/helpers.js","components/Footer/index.js","components/Nav/index.js","components/Portfolio/index.js","components/Resume/index.js","App.js","reportWebVitals.js","index.js"],"names":["About","id","className","Contact","useState","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","test","String","toLowerCase","validateEmail","value","length","onSubmit","preventDefault","console","log","htmlFor","type","defaultValue","onChange","rows","Footer","Nav","navItems","navSelected","setNavSelected","map","item","index","href","onClick","Portfolio","Resume","App","Page","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.791d13a7.chunk.js","sourcesContent":["import React from 'react';\n\nconst About = () => {\n  return (\n    <div id=\"about\">\n      <section className=\"about-pic\">\n        {/* <img\n          src=\"https://source.unsplash.com/300x300/?portrait,male\"\n          alt=\"portrait\"\n        /> */}\n      </section>\n      <section>\n        <h1>Hi! My name is Ryan.</h1>\n        <div className=\"body-text\">\n          I love to code. Teaching and coding are some of my favorite things.\n          Other favorite things: dirt bikes, wake surf, fitness. Hit me up if\n          you want to collaborate!\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\nconst Contact = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n\n  const { name, email, message } = formState;\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function handleChange(e) {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        if (!e.target.value.length) {\n          setErrorMessage(`${e.target.name} is required.`);\n        } else {\n          setErrorMessage('');\n        }\n      }\n    }\n\n    if (!errorMessage) {\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  }\n\n  return (\n    <div id=\"contact-container\">\n      <h4>My Contact Info</h4>\n      <div className=\"body-text\">\n        <span>ryancomte@gmail.com</span>\n        <span>|</span>\n        <span>(801)874-9950</span>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            defaultValue={name}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email Address:</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            defaultValue={email}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Message:</label>\n          <textarea\n            name=\"message\"\n            defaultValue={message}\n            onChange={handleChange}\n            rows=\"5\"\n          />\n        </div>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Contact;\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from 'react';\n\nconst Footer = () => {\n  return <footer>© 2021 • Built by Ryan Comte</footer>;\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst Nav = ({ navItems, navSelected, setNavSelected }) => {\n  return (\n    <header>\n      <div>\n        <h2>Ryan Comte</h2>\n        <nav>\n          <ul>\n            {navItems.map((item, index) => (\n              <li key={`${item}-page`}>\n                <a\n                  className={navSelected === index && 'navActive'}\n                  href={`#${item}`}\n                  onClick={() => setNavSelected(index)}\n                >\n                  {item}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\n\nconst Portfolio = () => {\n  return (\n    <div id=\"portfolio-container\">\n      <section>\n        <div>\n          <h4>Project 1</h4>\n          <p>Summary Text</p>\n        </div>\n      </section>\n      <section>\n        <div>\n          <h4>Project 2</h4>\n          <p>Summary Text</p>\n        </div>\n      </section>\n      <section>\n        <div>\n          <h4>Project 3</h4>\n          <p>Summary Text</p>\n        </div>\n      </section>\n      <section>\n        <div>\n          <h4>Project 4</h4>\n          <p>Summary Text</p>\n        </div>\n      </section>\n      <section>\n        <div>\n          <h4>Project 5</h4>\n          <p>Summary Text</p>\n        </div>\n      </section>\n      <section>\n        <div>\n          <h4>Project 6</h4>\n          <p>Summary Text</p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from 'react';\n\nconst Resume = () => {\n  return (\n    <div id=\"resume-container\">\n      <section>\n        <h2>Job 1</h2>\n        <span>Company Name</span>\n        <span>|</span>\n        <span>Aug. 2011 - present</span>\n        <div>\n          <p>\n            A job description summarizes the essential responsibilities,\n            activities, qualifications and skills for a role. Also known as a\n            JD, this document describes the type of work performed.\n          </p>\n          <p>\n            A job description should include important company details — company\n            mission, culture and any benefits it provides to employees. It may\n            also specify to whom the position reports and salary range.\n          </p>\n        </div>\n      </section>\n      <section>\n        <h2>Job 2</h2>\n        <span>Company Name</span>\n        <span>|</span>\n        <span>Aug. 2011 - present</span>\n        <div>\n          <p>\n            A job description summarizes the essential responsibilities,\n            activities, qualifications and skills for a role. Also known as a\n            JD, this document describes the type of work performed.\n          </p>\n          <p>\n            A job description should include important company details — company\n            mission, culture and any benefits it provides to employees. It may\n            also specify to whom the position reports and salary range.\n          </p>\n        </div>\n      </section>\n      <section>\n        <h2>Job 3</h2>\n        <span>Company Name</span>\n        <span>|</span>\n        <span>Aug. 2011 - present</span>\n        <div>\n          <p>\n            A job description summarizes the essential responsibilities,\n            activities, qualifications and skills for a role. Also known as a\n            JD, this document describes the type of work performed.\n          </p>\n          <p>\n            A job description should include important company details — company\n            mission, culture and any benefits it provides to employees. It may\n            also specify to whom the position reports and salary range.\n          </p>\n        </div>\n      </section>\n      <h2>\n        <a href=\"#resume\">Download Resume</a>\n      </h2>\n    </div>\n  );\n};\n\nexport default Resume;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport Nav from './components/Nav';\nimport Portfolio from './components/Portfolio';\nimport Resume from './components/Resume';\n\nfunction App() {\n  const navItems = ['About Me', 'Portfolio', 'Contact', 'Resume'];\n  const [navSelected, setNavSelected] = useState(0);\n\n  function Page({ navSelected }) {\n    switch (navSelected) {\n      case 0:\n        return <About />;\n      case 1:\n        return <Portfolio />;\n      case 2:\n        return <Contact />;\n      case 3:\n        return <Resume />;\n      default:\n        return <About />;\n    }\n  }\n\n  return (\n    <>\n      <Nav\n        navItems={navItems}\n        navSelected={navSelected}\n        setNavSelected={setNavSelected}\n      />\n      <main>\n        <Page navSelected={navSelected} />\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}